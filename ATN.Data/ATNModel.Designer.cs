//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ATNModel", "Author_AuthorsReference_FK1", "Author", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ATN.Data.Author), "AuthorsReference", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ATN.Data.AuthorsReference), true)]
[assembly: EdmRelationshipAttribute("ATNModel", "DataSource_Author_FK1", "DataSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ATN.Data.DataSource), "Author", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ATN.Data.Author), true)]
[assembly: EdmRelationshipAttribute("ATNModel", "Source_AuthorsReference_FK1", "Source", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ATN.Data.Source), "AuthorsReference", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ATN.Data.AuthorsReference), true)]
[assembly: EdmRelationshipAttribute("ATNModel", "Crawl_CrawlQueue_FK1", "Crawl", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ATN.Data.Crawl), "CrawlQueue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ATN.Data.CrawlQueue), true)]
[assembly: EdmRelationshipAttribute("ATNModel", "Crawl_CrawlResult_FK1", "Crawl", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ATN.Data.Crawl), "CrawlResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ATN.Data.CrawlResult), true)]
[assembly: EdmRelationshipAttribute("ATNModel", "Source_CrawlQueue_FK1", "Source", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ATN.Data.Source), "CrawlQueue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ATN.Data.CrawlQueue), true)]
[assembly: EdmRelationshipAttribute("ATNModel", "Source_CrawlResult_FK1", "Source", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ATN.Data.Source), "CrawlResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ATN.Data.CrawlResult), true)]
[assembly: EdmRelationshipAttribute("ATNModel", "DataSource_Editor_FK1", "DataSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ATN.Data.DataSource), "Editor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ATN.Data.Editor), true)]
[assembly: EdmRelationshipAttribute("ATNModel", "DataSource_Source_FK1", "DataSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ATN.Data.DataSource), "Source", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ATN.Data.Source), true)]
[assembly: EdmRelationshipAttribute("ATNModel", "Editor_EditorsReference_FK1", "Editor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ATN.Data.Editor), "EditorsReference", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ATN.Data.EditorsReference), true)]
[assembly: EdmRelationshipAttribute("ATNModel", "Source_EditorsReference_FK1", "Source", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ATN.Data.Source), "EditorsReference", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ATN.Data.EditorsReference), true)]
[assembly: EdmRelationshipAttribute("ATNModel", "CitationsReference", "Reference", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ATN.Data.Source), "Citation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ATN.Data.Source))]
[assembly: EdmRelationshipAttribute("ATNModel", "JournalName_Source_FK1", "Journal", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ATN.Data.Journal), "Source", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ATN.Data.Source), true)]
[assembly: EdmRelationshipAttribute("ATNModel", "FK_Crawl_Theory", "Theory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ATN.Data.Theory), "Crawl", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ATN.Data.Crawl), true)]
[assembly: EdmRelationshipAttribute("ATNModel", "FK_TheoryMembership_Run", "Run", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ATN.Data.Run), "TheoryMembership", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ATN.Data.TheoryMembership), true)]
[assembly: EdmRelationshipAttribute("ATNModel", "Theory_Run_FK1", "Theory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ATN.Data.Theory), "Run", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ATN.Data.Run), true)]
[assembly: EdmRelationshipAttribute("ATNModel", "Source_TheoryMembership_FK1", "Source", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ATN.Data.Source), "TheoryMembership", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ATN.Data.TheoryMembership), true)]
[assembly: EdmRelationshipAttribute("ATNModel", "Theory_TheoryMembership_FK1", "Theory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ATN.Data.Theory), "TheoryMembership", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ATN.Data.TheoryMembership), true)]
[assembly: EdmRelationshipAttribute("ATNModel", "RelatedSources", "Source", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ATN.Data.Source), "Source1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ATN.Data.Source))]
[assembly: EdmRelationshipAttribute("ATNModel", "FK_TheoryDefinition_Theory", "Theory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ATN.Data.Theory), "TheoryDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ATN.Data.TheoryDefinition), true)]
[assembly: EdmRelationshipAttribute("ATNModel", "FK_CrawlQueue_DataSource", "DataSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ATN.Data.DataSource), "CrawlQueue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ATN.Data.CrawlQueue), true)]
[assembly: EdmRelationshipAttribute("ATNModel", "FK_CrawlResult_DataSource", "DataSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ATN.Data.DataSource), "CrawlResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ATN.Data.CrawlResult), true)]
[assembly: EdmRelationshipAttribute("ATNModel", "FK_Subject_DataSource", "DataSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ATN.Data.DataSource), "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ATN.Data.Subject), true)]
[assembly: EdmRelationshipAttribute("ATNModel", "SourceSubject", "Source", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ATN.Data.Source), "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ATN.Data.Subject))]

#endregion

namespace ATN.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ATNEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ATNEntities object using the connection string found in the 'ATNEntities' section of the application configuration file.
        /// </summary>
        public ATNEntities() : base("name=ATNEntities", "ATNEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ATNEntities object.
        /// </summary>
        public ATNEntities(string connectionString) : base(connectionString, "ATNEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ATNEntities object.
        /// </summary>
        public ATNEntities(EntityConnection connection) : base(connection, "ATNEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Author> Authors
        {
            get
            {
                if ((_Authors == null))
                {
                    _Authors = base.CreateObjectSet<Author>("Authors");
                }
                return _Authors;
            }
        }
        private ObjectSet<Author> _Authors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AuthorsReference> AuthorsReferences
        {
            get
            {
                if ((_AuthorsReferences == null))
                {
                    _AuthorsReferences = base.CreateObjectSet<AuthorsReference>("AuthorsReferences");
                }
                return _AuthorsReferences;
            }
        }
        private ObjectSet<AuthorsReference> _AuthorsReferences;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Crawl> Crawls
        {
            get
            {
                if ((_Crawls == null))
                {
                    _Crawls = base.CreateObjectSet<Crawl>("Crawls");
                }
                return _Crawls;
            }
        }
        private ObjectSet<Crawl> _Crawls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CrawlQueue> CrawlQueues
        {
            get
            {
                if ((_CrawlQueues == null))
                {
                    _CrawlQueues = base.CreateObjectSet<CrawlQueue>("CrawlQueues");
                }
                return _CrawlQueues;
            }
        }
        private ObjectSet<CrawlQueue> _CrawlQueues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CrawlResult> CrawlResults
        {
            get
            {
                if ((_CrawlResults == null))
                {
                    _CrawlResults = base.CreateObjectSet<CrawlResult>("CrawlResults");
                }
                return _CrawlResults;
            }
        }
        private ObjectSet<CrawlResult> _CrawlResults;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DataSource> DataSources
        {
            get
            {
                if ((_DataSources == null))
                {
                    _DataSources = base.CreateObjectSet<DataSource>("DataSources");
                }
                return _DataSources;
            }
        }
        private ObjectSet<DataSource> _DataSources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Editor> Editors
        {
            get
            {
                if ((_Editors == null))
                {
                    _Editors = base.CreateObjectSet<Editor>("Editors");
                }
                return _Editors;
            }
        }
        private ObjectSet<Editor> _Editors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EditorsReference> EditorsReferences
        {
            get
            {
                if ((_EditorsReferences == null))
                {
                    _EditorsReferences = base.CreateObjectSet<EditorsReference>("EditorsReferences");
                }
                return _EditorsReferences;
            }
        }
        private ObjectSet<EditorsReference> _EditorsReferences;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Source> Sources
        {
            get
            {
                if ((_Sources == null))
                {
                    _Sources = base.CreateObjectSet<Source>("Sources");
                }
                return _Sources;
            }
        }
        private ObjectSet<Source> _Sources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        internal ObjectSet<Journal> Journals
        {
            get
            {
                if ((_Journals == null))
                {
                    _Journals = base.CreateObjectSet<Journal>("Journals");
                }
                return _Journals;
            }
        }
        private ObjectSet<Journal> _Journals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Run> Runs
        {
            get
            {
                if ((_Runs == null))
                {
                    _Runs = base.CreateObjectSet<Run>("Runs");
                }
                return _Runs;
            }
        }
        private ObjectSet<Run> _Runs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Theory> Theories
        {
            get
            {
                if ((_Theories == null))
                {
                    _Theories = base.CreateObjectSet<Theory>("Theories");
                }
                return _Theories;
            }
        }
        private ObjectSet<Theory> _Theories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TheoryMembership> TheoryMemberships
        {
            get
            {
                if ((_TheoryMemberships == null))
                {
                    _TheoryMemberships = base.CreateObjectSet<TheoryMembership>("TheoryMemberships");
                }
                return _TheoryMemberships;
            }
        }
        private ObjectSet<TheoryMembership> _TheoryMemberships;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TheoryMembershipSignificance> TheoryMembershipSignificances
        {
            get
            {
                if ((_TheoryMembershipSignificances == null))
                {
                    _TheoryMembershipSignificances = base.CreateObjectSet<TheoryMembershipSignificance>("TheoryMembershipSignificances");
                }
                return _TheoryMembershipSignificances;
            }
        }
        private ObjectSet<TheoryMembershipSignificance> _TheoryMembershipSignificances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TheoryDefinition> TheoryDefinitions
        {
            get
            {
                if ((_TheoryDefinitions == null))
                {
                    _TheoryDefinitions = base.CreateObjectSet<TheoryDefinition>("TheoryDefinitions");
                }
                return _TheoryDefinitions;
            }
        }
        private ObjectSet<TheoryDefinition> _TheoryDefinitions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Subject> Subjects
        {
            get
            {
                if ((_Subjects == null))
                {
                    _Subjects = base.CreateObjectSet<Subject>("Subjects");
                }
                return _Subjects;
            }
        }
        private ObjectSet<Subject> _Subjects;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Authors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuthors(Author author)
        {
            base.AddObject("Authors", author);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AuthorsReferences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuthorsReferences(AuthorsReference authorsReference)
        {
            base.AddObject("AuthorsReferences", authorsReference);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Crawls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCrawls(Crawl crawl)
        {
            base.AddObject("Crawls", crawl);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CrawlQueues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCrawlQueues(CrawlQueue crawlQueue)
        {
            base.AddObject("CrawlQueues", crawlQueue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CrawlResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCrawlResults(CrawlResult crawlResult)
        {
            base.AddObject("CrawlResults", crawlResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DataSources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDataSources(DataSource dataSource)
        {
            base.AddObject("DataSources", dataSource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Editors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEditors(Editor editor)
        {
            base.AddObject("Editors", editor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EditorsReferences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEditorsReferences(EditorsReference editorsReference)
        {
            base.AddObject("EditorsReferences", editorsReference);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSources(Source source)
        {
            base.AddObject("Sources", source);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Journals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJournals(Journal journal)
        {
            base.AddObject("Journals", journal);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Runs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRuns(Run run)
        {
            base.AddObject("Runs", run);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Theories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTheories(Theory theory)
        {
            base.AddObject("Theories", theory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TheoryMemberships EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTheoryMemberships(TheoryMembership theoryMembership)
        {
            base.AddObject("TheoryMemberships", theoryMembership);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TheoryMembershipSignificances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTheoryMembershipSignificances(TheoryMembershipSignificance theoryMembershipSignificance)
        {
            base.AddObject("TheoryMembershipSignificances", theoryMembershipSignificance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TheoryDefinitions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTheoryDefinitions(TheoryDefinition theoryDefinition)
        {
            base.AddObject("TheoryDefinitions", theoryDefinition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Subjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubjects(Subject subject)
        {
            base.AddObject("Subjects", subject);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ATNModel", Name="Author")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Author : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Author object.
        /// </summary>
        /// <param name="authorId">Initial value of the AuthorId property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="dataSourceId">Initial value of the DataSourceId property.</param>
        /// <param name="dataSourceSpecificId">Initial value of the DataSourceSpecificId property.</param>
        public static Author CreateAuthor(global::System.Int64 authorId, global::System.String lastName, global::System.Int32 dataSourceId, global::System.String dataSourceSpecificId)
        {
            Author author = new Author();
            author.AuthorId = authorId;
            author.LastName = lastName;
            author.DataSourceId = dataSourceId;
            author.DataSourceSpecificId = dataSourceSpecificId;
            return author;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AuthorId
        {
            get
            {
                return _AuthorId;
            }
            set
            {
                if (_AuthorId != value)
                {
                    OnAuthorIdChanging(value);
                    ReportPropertyChanging("AuthorId");
                    _AuthorId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AuthorId");
                    OnAuthorIdChanged();
                }
            }
        }
        private global::System.Int64 _AuthorId;
        partial void OnAuthorIdChanging(global::System.Int64 value);
        partial void OnAuthorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DataSourceId
        {
            get
            {
                return _DataSourceId;
            }
            set
            {
                OnDataSourceIdChanging(value);
                ReportPropertyChanging("DataSourceId");
                _DataSourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataSourceId");
                OnDataSourceIdChanged();
            }
        }
        private global::System.Int32 _DataSourceId;
        partial void OnDataSourceIdChanging(global::System.Int32 value);
        partial void OnDataSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DataSourceSpecificId
        {
            get
            {
                return _DataSourceSpecificId;
            }
            set
            {
                OnDataSourceSpecificIdChanging(value);
                ReportPropertyChanging("DataSourceSpecificId");
                _DataSourceSpecificId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DataSourceSpecificId");
                OnDataSourceSpecificIdChanged();
            }
        }
        private global::System.String _DataSourceSpecificId;
        partial void OnDataSourceSpecificIdChanging(global::System.String value);
        partial void OnDataSourceSpecificIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "Author_AuthorsReference_FK1", "AuthorsReference")]
        public EntityCollection<AuthorsReference> AuthorsReferences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuthorsReference>("ATNModel.Author_AuthorsReference_FK1", "AuthorsReference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuthorsReference>("ATNModel.Author_AuthorsReference_FK1", "AuthorsReference", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "DataSource_Author_FK1", "DataSource")]
        public DataSource DataSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataSource>("ATNModel.DataSource_Author_FK1", "DataSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataSource>("ATNModel.DataSource_Author_FK1", "DataSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DataSource> DataSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataSource>("ATNModel.DataSource_Author_FK1", "DataSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DataSource>("ATNModel.DataSource_Author_FK1", "DataSource", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ATNModel", Name="AuthorsReference")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AuthorsReference : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuthorsReference object.
        /// </summary>
        /// <param name="authorReferenceId">Initial value of the AuthorReferenceId property.</param>
        /// <param name="authorId">Initial value of the AuthorId property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        public static AuthorsReference CreateAuthorsReference(global::System.Int64 authorReferenceId, global::System.Int64 authorId, global::System.Int64 sourceId)
        {
            AuthorsReference authorsReference = new AuthorsReference();
            authorsReference.AuthorReferenceId = authorReferenceId;
            authorsReference.AuthorId = authorId;
            authorsReference.SourceId = sourceId;
            return authorsReference;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AuthorReferenceId
        {
            get
            {
                return _AuthorReferenceId;
            }
            set
            {
                if (_AuthorReferenceId != value)
                {
                    OnAuthorReferenceIdChanging(value);
                    ReportPropertyChanging("AuthorReferenceId");
                    _AuthorReferenceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AuthorReferenceId");
                    OnAuthorReferenceIdChanged();
                }
            }
        }
        private global::System.Int64 _AuthorReferenceId;
        partial void OnAuthorReferenceIdChanging(global::System.Int64 value);
        partial void OnAuthorReferenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AuthorId
        {
            get
            {
                return _AuthorId;
            }
            set
            {
                OnAuthorIdChanging(value);
                ReportPropertyChanging("AuthorId");
                _AuthorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AuthorId");
                OnAuthorIdChanged();
            }
        }
        private global::System.Int64 _AuthorId;
        partial void OnAuthorIdChanging(global::System.Int64 value);
        partial void OnAuthorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Int64 _SourceId;
        partial void OnSourceIdChanging(global::System.Int64 value);
        partial void OnSourceIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "Author_AuthorsReference_FK1", "Author")]
        public Author Author
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("ATNModel.Author_AuthorsReference_FK1", "Author").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("ATNModel.Author_AuthorsReference_FK1", "Author").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Author> AuthorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("ATNModel.Author_AuthorsReference_FK1", "Author");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Author>("ATNModel.Author_AuthorsReference_FK1", "Author", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "Source_AuthorsReference_FK1", "Source")]
        public Source Source
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("ATNModel.Source_AuthorsReference_FK1", "Source").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("ATNModel.Source_AuthorsReference_FK1", "Source").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Source> SourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("ATNModel.Source_AuthorsReference_FK1", "Source");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Source>("ATNModel.Source_AuthorsReference_FK1", "Source", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ATNModel", Name="Crawl")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Crawl : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Crawl object.
        /// </summary>
        /// <param name="crawlId">Initial value of the CrawlId property.</param>
        /// <param name="crawlState">Initial value of the CrawlState property.</param>
        /// <param name="dateCrawled">Initial value of the DateCrawled property.</param>
        /// <param name="theoryId">Initial value of the TheoryId property.</param>
        public static Crawl CreateCrawl(global::System.Int32 crawlId, global::System.Int16 crawlState, global::System.DateTime dateCrawled, global::System.Int32 theoryId)
        {
            Crawl crawl = new Crawl();
            crawl.CrawlId = crawlId;
            crawl.CrawlState = crawlState;
            crawl.DateCrawled = dateCrawled;
            crawl.TheoryId = theoryId;
            return crawl;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CrawlId
        {
            get
            {
                return _CrawlId;
            }
            set
            {
                if (_CrawlId != value)
                {
                    OnCrawlIdChanging(value);
                    ReportPropertyChanging("CrawlId");
                    _CrawlId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CrawlId");
                    OnCrawlIdChanged();
                }
            }
        }
        private global::System.Int32 _CrawlId;
        partial void OnCrawlIdChanging(global::System.Int32 value);
        partial void OnCrawlIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 CrawlState
        {
            get
            {
                return _CrawlState;
            }
            set
            {
                OnCrawlStateChanging(value);
                ReportPropertyChanging("CrawlState");
                _CrawlState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CrawlState");
                OnCrawlStateChanged();
            }
        }
        private global::System.Int16 _CrawlState;
        partial void OnCrawlStateChanging(global::System.Int16 value);
        partial void OnCrawlStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCrawled
        {
            get
            {
                return _DateCrawled;
            }
            set
            {
                OnDateCrawledChanging(value);
                ReportPropertyChanging("DateCrawled");
                _DateCrawled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCrawled");
                OnDateCrawledChanged();
            }
        }
        private global::System.DateTime _DateCrawled;
        partial void OnDateCrawledChanging(global::System.DateTime value);
        partial void OnDateCrawledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> LastEnumeratedSourceId
        {
            get
            {
                return _LastEnumeratedSourceId;
            }
            set
            {
                OnLastEnumeratedSourceIdChanging(value);
                ReportPropertyChanging("LastEnumeratedSourceId");
                _LastEnumeratedSourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastEnumeratedSourceId");
                OnLastEnumeratedSourceIdChanged();
            }
        }
        private Nullable<global::System.Int64> _LastEnumeratedSourceId;
        partial void OnLastEnumeratedSourceIdChanging(Nullable<global::System.Int64> value);
        partial void OnLastEnumeratedSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TheoryId
        {
            get
            {
                return _TheoryId;
            }
            set
            {
                OnTheoryIdChanging(value);
                ReportPropertyChanging("TheoryId");
                _TheoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TheoryId");
                OnTheoryIdChanged();
            }
        }
        private global::System.Int32 _TheoryId;
        partial void OnTheoryIdChanging(global::System.Int32 value);
        partial void OnTheoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CrawlIntervalDays
        {
            get
            {
                return _CrawlIntervalDays;
            }
            set
            {
                OnCrawlIntervalDaysChanging(value);
                ReportPropertyChanging("CrawlIntervalDays");
                _CrawlIntervalDays = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CrawlIntervalDays");
                OnCrawlIntervalDaysChanged();
            }
        }
        private Nullable<global::System.Int32> _CrawlIntervalDays;
        partial void OnCrawlIntervalDaysChanging(Nullable<global::System.Int32> value);
        partial void OnCrawlIntervalDaysChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "Crawl_CrawlQueue_FK1", "CrawlQueue")]
        public EntityCollection<CrawlQueue> CrawlQueues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CrawlQueue>("ATNModel.Crawl_CrawlQueue_FK1", "CrawlQueue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CrawlQueue>("ATNModel.Crawl_CrawlQueue_FK1", "CrawlQueue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "Crawl_CrawlResult_FK1", "CrawlResult")]
        public EntityCollection<CrawlResult> CrawlResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CrawlResult>("ATNModel.Crawl_CrawlResult_FK1", "CrawlResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CrawlResult>("ATNModel.Crawl_CrawlResult_FK1", "CrawlResult", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "FK_Crawl_Theory", "Theory")]
        public Theory Theory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theory>("ATNModel.FK_Crawl_Theory", "Theory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theory>("ATNModel.FK_Crawl_Theory", "Theory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Theory> TheoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theory>("ATNModel.FK_Crawl_Theory", "Theory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Theory>("ATNModel.FK_Crawl_Theory", "Theory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ATNModel", Name="CrawlQueue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CrawlQueue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CrawlQueue object.
        /// </summary>
        /// <param name="crawQueueId">Initial value of the CrawQueueId property.</param>
        /// <param name="crawlId">Initial value of the CrawlId property.</param>
        /// <param name="dataSourceSpecificId">Initial value of the DataSourceSpecificId property.</param>
        /// <param name="crawlReferenceDirection">Initial value of the CrawlReferenceDirection property.</param>
        /// <param name="dataSourceId">Initial value of the DataSourceId property.</param>
        public static CrawlQueue CreateCrawlQueue(global::System.Int64 crawQueueId, global::System.Int32 crawlId, global::System.String dataSourceSpecificId, global::System.Int16 crawlReferenceDirection, global::System.Int32 dataSourceId)
        {
            CrawlQueue crawlQueue = new CrawlQueue();
            crawlQueue.CrawQueueId = crawQueueId;
            crawlQueue.CrawlId = crawlId;
            crawlQueue.DataSourceSpecificId = dataSourceSpecificId;
            crawlQueue.CrawlReferenceDirection = crawlReferenceDirection;
            crawlQueue.DataSourceId = dataSourceId;
            return crawlQueue;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CrawQueueId
        {
            get
            {
                return _CrawQueueId;
            }
            set
            {
                if (_CrawQueueId != value)
                {
                    OnCrawQueueIdChanging(value);
                    ReportPropertyChanging("CrawQueueId");
                    _CrawQueueId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CrawQueueId");
                    OnCrawQueueIdChanged();
                }
            }
        }
        private global::System.Int64 _CrawQueueId;
        partial void OnCrawQueueIdChanging(global::System.Int64 value);
        partial void OnCrawQueueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CrawlId
        {
            get
            {
                return _CrawlId;
            }
            set
            {
                OnCrawlIdChanging(value);
                ReportPropertyChanging("CrawlId");
                _CrawlId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CrawlId");
                OnCrawlIdChanged();
            }
        }
        private global::System.Int32 _CrawlId;
        partial void OnCrawlIdChanging(global::System.Int32 value);
        partial void OnCrawlIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DataSourceSpecificId
        {
            get
            {
                return _DataSourceSpecificId;
            }
            set
            {
                OnDataSourceSpecificIdChanging(value);
                ReportPropertyChanging("DataSourceSpecificId");
                _DataSourceSpecificId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DataSourceSpecificId");
                OnDataSourceSpecificIdChanged();
            }
        }
        private global::System.String _DataSourceSpecificId;
        partial void OnDataSourceSpecificIdChanging(global::System.String value);
        partial void OnDataSourceSpecificIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 CrawlReferenceDirection
        {
            get
            {
                return _CrawlReferenceDirection;
            }
            set
            {
                OnCrawlReferenceDirectionChanging(value);
                ReportPropertyChanging("CrawlReferenceDirection");
                _CrawlReferenceDirection = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CrawlReferenceDirection");
                OnCrawlReferenceDirectionChanged();
            }
        }
        private global::System.Int16 _CrawlReferenceDirection;
        partial void OnCrawlReferenceDirectionChanging(global::System.Int16 value);
        partial void OnCrawlReferenceDirectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ReferencesSourceId
        {
            get
            {
                return _ReferencesSourceId;
            }
            set
            {
                OnReferencesSourceIdChanging(value);
                ReportPropertyChanging("ReferencesSourceId");
                _ReferencesSourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReferencesSourceId");
                OnReferencesSourceIdChanged();
            }
        }
        private Nullable<global::System.Int64> _ReferencesSourceId;
        partial void OnReferencesSourceIdChanging(Nullable<global::System.Int64> value);
        partial void OnReferencesSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DataSourceId
        {
            get
            {
                return _DataSourceId;
            }
            set
            {
                OnDataSourceIdChanging(value);
                ReportPropertyChanging("DataSourceId");
                _DataSourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataSourceId");
                OnDataSourceIdChanged();
            }
        }
        private global::System.Int32 _DataSourceId;
        partial void OnDataSourceIdChanging(global::System.Int32 value);
        partial void OnDataSourceIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "Crawl_CrawlQueue_FK1", "Crawl")]
        public Crawl Crawl
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Crawl>("ATNModel.Crawl_CrawlQueue_FK1", "Crawl").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Crawl>("ATNModel.Crawl_CrawlQueue_FK1", "Crawl").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Crawl> CrawlReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Crawl>("ATNModel.Crawl_CrawlQueue_FK1", "Crawl");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Crawl>("ATNModel.Crawl_CrawlQueue_FK1", "Crawl", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "Source_CrawlQueue_FK1", "Source")]
        public Source Source
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("ATNModel.Source_CrawlQueue_FK1", "Source").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("ATNModel.Source_CrawlQueue_FK1", "Source").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Source> SourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("ATNModel.Source_CrawlQueue_FK1", "Source");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Source>("ATNModel.Source_CrawlQueue_FK1", "Source", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "FK_CrawlQueue_DataSource", "DataSource")]
        public DataSource DataSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataSource>("ATNModel.FK_CrawlQueue_DataSource", "DataSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataSource>("ATNModel.FK_CrawlQueue_DataSource", "DataSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DataSource> DataSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataSource>("ATNModel.FK_CrawlQueue_DataSource", "DataSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DataSource>("ATNModel.FK_CrawlQueue_DataSource", "DataSource", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ATNModel", Name="CrawlResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CrawlResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CrawlResult object.
        /// </summary>
        /// <param name="crawlResultId">Initial value of the CrawlResultId property.</param>
        /// <param name="crawlId">Initial value of the CrawlId property.</param>
        /// <param name="dataSourceSpecificId">Initial value of the DataSourceSpecificId property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        /// <param name="dateRetreieved">Initial value of the DateRetreieved property.</param>
        /// <param name="referenceRetrieved">Initial value of the ReferenceRetrieved property.</param>
        /// <param name="dataSourceId">Initial value of the DataSourceId property.</param>
        public static CrawlResult CreateCrawlResult(global::System.Int64 crawlResultId, global::System.Int32 crawlId, global::System.String dataSourceSpecificId, global::System.Int64 sourceId, global::System.DateTime dateRetreieved, global::System.Boolean referenceRetrieved, global::System.Int32 dataSourceId)
        {
            CrawlResult crawlResult = new CrawlResult();
            crawlResult.CrawlResultId = crawlResultId;
            crawlResult.CrawlId = crawlId;
            crawlResult.DataSourceSpecificId = dataSourceSpecificId;
            crawlResult.SourceId = sourceId;
            crawlResult.DateRetreieved = dateRetreieved;
            crawlResult.ReferenceRetrieved = referenceRetrieved;
            crawlResult.DataSourceId = dataSourceId;
            return crawlResult;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CrawlResultId
        {
            get
            {
                return _CrawlResultId;
            }
            set
            {
                if (_CrawlResultId != value)
                {
                    OnCrawlResultIdChanging(value);
                    ReportPropertyChanging("CrawlResultId");
                    _CrawlResultId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CrawlResultId");
                    OnCrawlResultIdChanged();
                }
            }
        }
        private global::System.Int64 _CrawlResultId;
        partial void OnCrawlResultIdChanging(global::System.Int64 value);
        partial void OnCrawlResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CrawlId
        {
            get
            {
                return _CrawlId;
            }
            set
            {
                OnCrawlIdChanging(value);
                ReportPropertyChanging("CrawlId");
                _CrawlId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CrawlId");
                OnCrawlIdChanged();
            }
        }
        private global::System.Int32 _CrawlId;
        partial void OnCrawlIdChanging(global::System.Int32 value);
        partial void OnCrawlIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DataSourceSpecificId
        {
            get
            {
                return _DataSourceSpecificId;
            }
            set
            {
                OnDataSourceSpecificIdChanging(value);
                ReportPropertyChanging("DataSourceSpecificId");
                _DataSourceSpecificId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DataSourceSpecificId");
                OnDataSourceSpecificIdChanged();
            }
        }
        private global::System.String _DataSourceSpecificId;
        partial void OnDataSourceSpecificIdChanging(global::System.String value);
        partial void OnDataSourceSpecificIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Int64 _SourceId;
        partial void OnSourceIdChanging(global::System.Int64 value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateRetreieved
        {
            get
            {
                return _DateRetreieved;
            }
            set
            {
                OnDateRetreievedChanging(value);
                ReportPropertyChanging("DateRetreieved");
                _DateRetreieved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateRetreieved");
                OnDateRetreievedChanged();
            }
        }
        private global::System.DateTime _DateRetreieved;
        partial void OnDateRetreievedChanging(global::System.DateTime value);
        partial void OnDateRetreievedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ReferenceRetrieved
        {
            get
            {
                return _ReferenceRetrieved;
            }
            set
            {
                OnReferenceRetrievedChanging(value);
                ReportPropertyChanging("ReferenceRetrieved");
                _ReferenceRetrieved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReferenceRetrieved");
                OnReferenceRetrievedChanged();
            }
        }
        private global::System.Boolean _ReferenceRetrieved;
        partial void OnReferenceRetrievedChanging(global::System.Boolean value);
        partial void OnReferenceRetrievedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DataSourceId
        {
            get
            {
                return _DataSourceId;
            }
            set
            {
                OnDataSourceIdChanging(value);
                ReportPropertyChanging("DataSourceId");
                _DataSourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataSourceId");
                OnDataSourceIdChanged();
            }
        }
        private global::System.Int32 _DataSourceId;
        partial void OnDataSourceIdChanging(global::System.Int32 value);
        partial void OnDataSourceIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "Crawl_CrawlResult_FK1", "Crawl")]
        public Crawl Crawl
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Crawl>("ATNModel.Crawl_CrawlResult_FK1", "Crawl").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Crawl>("ATNModel.Crawl_CrawlResult_FK1", "Crawl").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Crawl> CrawlReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Crawl>("ATNModel.Crawl_CrawlResult_FK1", "Crawl");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Crawl>("ATNModel.Crawl_CrawlResult_FK1", "Crawl", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "Source_CrawlResult_FK1", "Source")]
        public Source Source
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("ATNModel.Source_CrawlResult_FK1", "Source").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("ATNModel.Source_CrawlResult_FK1", "Source").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Source> SourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("ATNModel.Source_CrawlResult_FK1", "Source");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Source>("ATNModel.Source_CrawlResult_FK1", "Source", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "FK_CrawlResult_DataSource", "DataSource")]
        public DataSource DataSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataSource>("ATNModel.FK_CrawlResult_DataSource", "DataSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataSource>("ATNModel.FK_CrawlResult_DataSource", "DataSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DataSource> DataSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataSource>("ATNModel.FK_CrawlResult_DataSource", "DataSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DataSource>("ATNModel.FK_CrawlResult_DataSource", "DataSource", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ATNModel", Name="DataSource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DataSource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DataSource object.
        /// </summary>
        /// <param name="dataSourceId">Initial value of the DataSourceId property.</param>
        /// <param name="dataSourceName">Initial value of the DataSourceName property.</param>
        public static DataSource CreateDataSource(global::System.Int32 dataSourceId, global::System.String dataSourceName)
        {
            DataSource dataSource = new DataSource();
            dataSource.DataSourceId = dataSourceId;
            dataSource.DataSourceName = dataSourceName;
            return dataSource;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DataSourceId
        {
            get
            {
                return _DataSourceId;
            }
            set
            {
                if (_DataSourceId != value)
                {
                    OnDataSourceIdChanging(value);
                    ReportPropertyChanging("DataSourceId");
                    _DataSourceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DataSourceId");
                    OnDataSourceIdChanged();
                }
            }
        }
        private global::System.Int32 _DataSourceId;
        partial void OnDataSourceIdChanging(global::System.Int32 value);
        partial void OnDataSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DataSourceName
        {
            get
            {
                return _DataSourceName;
            }
            set
            {
                OnDataSourceNameChanging(value);
                ReportPropertyChanging("DataSourceName");
                _DataSourceName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DataSourceName");
                OnDataSourceNameChanged();
            }
        }
        private global::System.String _DataSourceName;
        partial void OnDataSourceNameChanging(global::System.String value);
        partial void OnDataSourceNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "DataSource_Author_FK1", "Author")]
        public EntityCollection<Author> Authors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Author>("ATNModel.DataSource_Author_FK1", "Author");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Author>("ATNModel.DataSource_Author_FK1", "Author", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "DataSource_Editor_FK1", "Editor")]
        public EntityCollection<Editor> Editors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Editor>("ATNModel.DataSource_Editor_FK1", "Editor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Editor>("ATNModel.DataSource_Editor_FK1", "Editor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "DataSource_Source_FK1", "Source")]
        public EntityCollection<Source> Sources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Source>("ATNModel.DataSource_Source_FK1", "Source");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Source>("ATNModel.DataSource_Source_FK1", "Source", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "FK_CrawlQueue_DataSource", "CrawlQueue")]
        public EntityCollection<CrawlQueue> CrawlQueues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CrawlQueue>("ATNModel.FK_CrawlQueue_DataSource", "CrawlQueue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CrawlQueue>("ATNModel.FK_CrawlQueue_DataSource", "CrawlQueue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "FK_CrawlResult_DataSource", "CrawlResult")]
        public EntityCollection<CrawlResult> CrawlResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CrawlResult>("ATNModel.FK_CrawlResult_DataSource", "CrawlResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CrawlResult>("ATNModel.FK_CrawlResult_DataSource", "CrawlResult", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "FK_Subject_DataSource", "Subject")]
        public EntityCollection<Subject> Subjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subject>("ATNModel.FK_Subject_DataSource", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subject>("ATNModel.FK_Subject_DataSource", "Subject", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ATNModel", Name="Editor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Editor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Editor object.
        /// </summary>
        /// <param name="editorId">Initial value of the EditorId property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="dataSourceId">Initial value of the DataSourceId property.</param>
        /// <param name="dataSourceSpecificId">Initial value of the DataSourceSpecificId property.</param>
        public static Editor CreateEditor(global::System.Int64 editorId, global::System.String lastName, global::System.Int32 dataSourceId, global::System.String dataSourceSpecificId)
        {
            Editor editor = new Editor();
            editor.EditorId = editorId;
            editor.LastName = lastName;
            editor.DataSourceId = dataSourceId;
            editor.DataSourceSpecificId = dataSourceSpecificId;
            return editor;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EditorId
        {
            get
            {
                return _EditorId;
            }
            set
            {
                if (_EditorId != value)
                {
                    OnEditorIdChanging(value);
                    ReportPropertyChanging("EditorId");
                    _EditorId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EditorId");
                    OnEditorIdChanged();
                }
            }
        }
        private global::System.Int64 _EditorId;
        partial void OnEditorIdChanging(global::System.Int64 value);
        partial void OnEditorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DataSourceId
        {
            get
            {
                return _DataSourceId;
            }
            set
            {
                OnDataSourceIdChanging(value);
                ReportPropertyChanging("DataSourceId");
                _DataSourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataSourceId");
                OnDataSourceIdChanged();
            }
        }
        private global::System.Int32 _DataSourceId;
        partial void OnDataSourceIdChanging(global::System.Int32 value);
        partial void OnDataSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DataSourceSpecificId
        {
            get
            {
                return _DataSourceSpecificId;
            }
            set
            {
                OnDataSourceSpecificIdChanging(value);
                ReportPropertyChanging("DataSourceSpecificId");
                _DataSourceSpecificId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DataSourceSpecificId");
                OnDataSourceSpecificIdChanged();
            }
        }
        private global::System.String _DataSourceSpecificId;
        partial void OnDataSourceSpecificIdChanging(global::System.String value);
        partial void OnDataSourceSpecificIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "DataSource_Editor_FK1", "DataSource")]
        public DataSource DataSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataSource>("ATNModel.DataSource_Editor_FK1", "DataSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataSource>("ATNModel.DataSource_Editor_FK1", "DataSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DataSource> DataSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataSource>("ATNModel.DataSource_Editor_FK1", "DataSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DataSource>("ATNModel.DataSource_Editor_FK1", "DataSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "Editor_EditorsReference_FK1", "EditorsReference")]
        public EntityCollection<EditorsReference> EditorsReferences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EditorsReference>("ATNModel.Editor_EditorsReference_FK1", "EditorsReference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EditorsReference>("ATNModel.Editor_EditorsReference_FK1", "EditorsReference", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ATNModel", Name="EditorsReference")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EditorsReference : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EditorsReference object.
        /// </summary>
        /// <param name="editorReferenceId">Initial value of the EditorReferenceId property.</param>
        /// <param name="editorId">Initial value of the EditorId property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        public static EditorsReference CreateEditorsReference(global::System.Int64 editorReferenceId, global::System.Int64 editorId, global::System.Int64 sourceId)
        {
            EditorsReference editorsReference = new EditorsReference();
            editorsReference.EditorReferenceId = editorReferenceId;
            editorsReference.EditorId = editorId;
            editorsReference.SourceId = sourceId;
            return editorsReference;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EditorReferenceId
        {
            get
            {
                return _EditorReferenceId;
            }
            set
            {
                if (_EditorReferenceId != value)
                {
                    OnEditorReferenceIdChanging(value);
                    ReportPropertyChanging("EditorReferenceId");
                    _EditorReferenceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EditorReferenceId");
                    OnEditorReferenceIdChanged();
                }
            }
        }
        private global::System.Int64 _EditorReferenceId;
        partial void OnEditorReferenceIdChanging(global::System.Int64 value);
        partial void OnEditorReferenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EditorId
        {
            get
            {
                return _EditorId;
            }
            set
            {
                OnEditorIdChanging(value);
                ReportPropertyChanging("EditorId");
                _EditorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EditorId");
                OnEditorIdChanged();
            }
        }
        private global::System.Int64 _EditorId;
        partial void OnEditorIdChanging(global::System.Int64 value);
        partial void OnEditorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Int64 _SourceId;
        partial void OnSourceIdChanging(global::System.Int64 value);
        partial void OnSourceIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "Editor_EditorsReference_FK1", "Editor")]
        public Editor Editor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Editor>("ATNModel.Editor_EditorsReference_FK1", "Editor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Editor>("ATNModel.Editor_EditorsReference_FK1", "Editor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Editor> EditorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Editor>("ATNModel.Editor_EditorsReference_FK1", "Editor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Editor>("ATNModel.Editor_EditorsReference_FK1", "Editor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "Source_EditorsReference_FK1", "Source")]
        public Source Source
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("ATNModel.Source_EditorsReference_FK1", "Source").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("ATNModel.Source_EditorsReference_FK1", "Source").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Source> SourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("ATNModel.Source_EditorsReference_FK1", "Source");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Source>("ATNModel.Source_EditorsReference_FK1", "Source", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ATNModel", Name="Journal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Journal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Journal object.
        /// </summary>
        /// <param name="journalId">Initial value of the JournalId property.</param>
        /// <param name="journalName">Initial value of the JournalName property.</param>
        public static Journal CreateJournal(global::System.Int32 journalId, global::System.String journalName)
        {
            Journal journal = new Journal();
            journal.JournalId = journalId;
            journal.JournalName = journalName;
            return journal;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JournalId
        {
            get
            {
                return _JournalId;
            }
            set
            {
                if (_JournalId != value)
                {
                    OnJournalIdChanging(value);
                    ReportPropertyChanging("JournalId");
                    _JournalId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JournalId");
                    OnJournalIdChanged();
                }
            }
        }
        private global::System.Int32 _JournalId;
        partial void OnJournalIdChanging(global::System.Int32 value);
        partial void OnJournalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JournalName
        {
            get
            {
                return _JournalName;
            }
            set
            {
                OnJournalNameChanging(value);
                ReportPropertyChanging("JournalName");
                _JournalName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("JournalName");
                OnJournalNameChanged();
            }
        }
        private global::System.String _JournalName;
        partial void OnJournalNameChanging(global::System.String value);
        partial void OnJournalNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExternalURL
        {
            get
            {
                return _ExternalURL;
            }
            set
            {
                OnExternalURLChanging(value);
                ReportPropertyChanging("ExternalURL");
                _ExternalURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExternalURL");
                OnExternalURLChanged();
            }
        }
        private global::System.String _ExternalURL;
        partial void OnExternalURLChanging(global::System.String value);
        partial void OnExternalURLChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "JournalName_Source_FK1", "Source")]
        public EntityCollection<Source> Sources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Source>("ATNModel.JournalName_Source_FK1", "Source");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Source>("ATNModel.JournalName_Source_FK1", "Source", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ATNModel", Name="Run")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Run : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Run object.
        /// </summary>
        /// <param name="runId">Initial value of the RunId property.</param>
        /// <param name="dateStarted">Initial value of the DateStarted property.</param>
        /// <param name="theoryId">Initial value of the TheoryId property.</param>
        public static Run CreateRun(global::System.Int32 runId, global::System.DateTime dateStarted, global::System.Int32 theoryId)
        {
            Run run = new Run();
            run.RunId = runId;
            run.DateStarted = dateStarted;
            run.TheoryId = theoryId;
            return run;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RunId
        {
            get
            {
                return _RunId;
            }
            set
            {
                if (_RunId != value)
                {
                    OnRunIdChanging(value);
                    ReportPropertyChanging("RunId");
                    _RunId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RunId");
                    OnRunIdChanged();
                }
            }
        }
        private global::System.Int32 _RunId;
        partial void OnRunIdChanging(global::System.Int32 value);
        partial void OnRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateStarted
        {
            get
            {
                return _DateStarted;
            }
            set
            {
                OnDateStartedChanging(value);
                ReportPropertyChanging("DateStarted");
                _DateStarted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateStarted");
                OnDateStartedChanged();
            }
        }
        private global::System.DateTime _DateStarted;
        partial void OnDateStartedChanging(global::System.DateTime value);
        partial void OnDateStartedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TheoryId
        {
            get
            {
                return _TheoryId;
            }
            set
            {
                OnTheoryIdChanging(value);
                ReportPropertyChanging("TheoryId");
                _TheoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TheoryId");
                OnTheoryIdChanged();
            }
        }
        private global::System.Int32 _TheoryId;
        partial void OnTheoryIdChanging(global::System.Int32 value);
        partial void OnTheoryIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "FK_TheoryMembership_Run", "TheoryMembership")]
        public EntityCollection<TheoryMembership> TheoryMemberships
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TheoryMembership>("ATNModel.FK_TheoryMembership_Run", "TheoryMembership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TheoryMembership>("ATNModel.FK_TheoryMembership_Run", "TheoryMembership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "Theory_Run_FK1", "Theory")]
        public Theory Theory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theory>("ATNModel.Theory_Run_FK1", "Theory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theory>("ATNModel.Theory_Run_FK1", "Theory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Theory> TheoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theory>("ATNModel.Theory_Run_FK1", "Theory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Theory>("ATNModel.Theory_Run_FK1", "Theory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ATNModel", Name="Source")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Source : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Source object.
        /// </summary>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        /// <param name="sourceType">Initial value of the SourceType property.</param>
        /// <param name="dataSourceId">Initial value of the DataSourceId property.</param>
        /// <param name="serializedDataSourceResponse">Initial value of the SerializedDataSourceResponse property.</param>
        /// <param name="dataSourceSpecificId">Initial value of the DataSourceSpecificId property.</param>
        public static Source CreateSource(global::System.Int64 sourceId, global::System.Int32 sourceType, global::System.Int32 dataSourceId, global::System.String serializedDataSourceResponse, global::System.String dataSourceSpecificId)
        {
            Source source = new Source();
            source.SourceId = sourceId;
            source.SourceType = sourceType;
            source.DataSourceId = dataSourceId;
            source.SerializedDataSourceResponse = serializedDataSourceResponse;
            source.DataSourceSpecificId = dataSourceSpecificId;
            return source;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                if (_SourceId != value)
                {
                    OnSourceIdChanging(value);
                    ReportPropertyChanging("SourceId");
                    _SourceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SourceId");
                    OnSourceIdChanged();
                }
            }
        }
        private global::System.Int64 _SourceId;
        partial void OnSourceIdChanging(global::System.Int64 value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceType
        {
            get
            {
                return _SourceType;
            }
            set
            {
                OnSourceTypeChanging(value);
                ReportPropertyChanging("SourceType");
                _SourceType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceType");
                OnSourceTypeChanged();
            }
        }
        private global::System.Int32 _SourceType;
        partial void OnSourceTypeChanging(global::System.Int32 value);
        partial void OnSourceTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DataSourceId
        {
            get
            {
                return _DataSourceId;
            }
            set
            {
                OnDataSourceIdChanging(value);
                ReportPropertyChanging("DataSourceId");
                _DataSourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataSourceId");
                OnDataSourceIdChanged();
            }
        }
        private global::System.Int32 _DataSourceId;
        partial void OnDataSourceIdChanging(global::System.Int32 value);
        partial void OnDataSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProquestId
        {
            get
            {
                return _ProquestId;
            }
            set
            {
                OnProquestIdChanging(value);
                ReportPropertyChanging("ProquestId");
                _ProquestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProquestId");
                OnProquestIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProquestId;
        partial void OnProquestIdChanging(Nullable<global::System.Int32> value);
        partial void OnProquestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DOI
        {
            get
            {
                return _DOI;
            }
            set
            {
                OnDOIChanging(value);
                ReportPropertyChanging("DOI");
                _DOI = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DOI");
                OnDOIChanged();
            }
        }
        private global::System.String _DOI;
        partial void OnDOIChanging(global::System.String value);
        partial void OnDOIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ArticleTitle
        {
            get
            {
                return _ArticleTitle;
            }
            set
            {
                OnArticleTitleChanging(value);
                ReportPropertyChanging("ArticleTitle");
                _ArticleTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ArticleTitle");
                OnArticleTitleChanged();
            }
        }
        private global::System.String _ArticleTitle;
        partial void OnArticleTitleChanging(global::System.String value);
        partial void OnArticleTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BookTitle
        {
            get
            {
                return _BookTitle;
            }
            set
            {
                OnBookTitleChanging(value);
                ReportPropertyChanging("BookTitle");
                _BookTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BookTitle");
                OnBookTitleChanged();
            }
        }
        private global::System.String _BookTitle;
        partial void OnBookTitleChanging(global::System.String value);
        partial void OnBookTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ISSN
        {
            get
            {
                return _ISSN;
            }
            set
            {
                OnISSNChanging(value);
                ReportPropertyChanging("ISSN");
                _ISSN = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ISSN");
                OnISSNChanged();
            }
        }
        private Nullable<global::System.Int32> _ISSN;
        partial void OnISSNChanging(Nullable<global::System.Int32> value);
        partial void OnISSNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDS
        {
            get
            {
                return _IDS;
            }
            set
            {
                OnIDSChanging(value);
                ReportPropertyChanging("IDS");
                _IDS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDS");
                OnIDSChanged();
            }
        }
        private Nullable<global::System.Int32> _IDS;
        partial void OnIDSChanging(Nullable<global::System.Int32> value);
        partial void OnIDSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private Nullable<global::System.Int32> _Year;
        partial void OnYearChanging(Nullable<global::System.Int32> value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Edition
        {
            get
            {
                return _Edition;
            }
            set
            {
                OnEditionChanging(value);
                ReportPropertyChanging("Edition");
                _Edition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Edition");
                OnEditionChanged();
            }
        }
        private global::System.String _Edition;
        partial void OnEditionChanging(global::System.String value);
        partial void OnEditionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private global::System.String _Volume;
        partial void OnVolumeChanging(global::System.String value);
        partial void OnVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Issue
        {
            get
            {
                return _Issue;
            }
            set
            {
                OnIssueChanging(value);
                ReportPropertyChanging("Issue");
                _Issue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Issue");
                OnIssueChanged();
            }
        }
        private global::System.String _Issue;
        partial void OnIssueChanging(global::System.String value);
        partial void OnIssueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Publisher
        {
            get
            {
                return _Publisher;
            }
            set
            {
                OnPublisherChanging(value);
                ReportPropertyChanging("Publisher");
                _Publisher = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Publisher");
                OnPublisherChanged();
            }
        }
        private global::System.String _Publisher;
        partial void OnPublisherChanging(global::System.String value);
        partial void OnPublisherChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Language
        {
            get
            {
                return _Language;
            }
            set
            {
                OnLanguageChanging(value);
                ReportPropertyChanging("Language");
                _Language = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Language");
                OnLanguageChanged();
            }
        }
        private global::System.String _Language;
        partial void OnLanguageChanging(global::System.String value);
        partial void OnLanguageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Pages
        {
            get
            {
                return _Pages;
            }
            set
            {
                OnPagesChanging(value);
                ReportPropertyChanging("Pages");
                _Pages = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Pages");
                OnPagesChanged();
            }
        }
        private global::System.String _Pages;
        partial void OnPagesChanging(global::System.String value);
        partial void OnPagesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExternalURL
        {
            get
            {
                return _ExternalURL;
            }
            set
            {
                OnExternalURLChanging(value);
                ReportPropertyChanging("ExternalURL");
                _ExternalURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExternalURL");
                OnExternalURLChanged();
            }
        }
        private global::System.String _ExternalURL;
        partial void OnExternalURLChanging(global::System.String value);
        partial void OnExternalURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Abstract
        {
            get
            {
                return _Abstract;
            }
            set
            {
                OnAbstractChanging(value);
                ReportPropertyChanging("Abstract");
                _Abstract = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Abstract");
                OnAbstractChanged();
            }
        }
        private global::System.String _Abstract;
        partial void OnAbstractChanging(global::System.String value);
        partial void OnAbstractChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JournalId
        {
            get
            {
                return _JournalId;
            }
            set
            {
                OnJournalIdChanging(value);
                ReportPropertyChanging("JournalId");
                _JournalId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JournalId");
                OnJournalIdChanged();
            }
        }
        private Nullable<global::System.Int32> _JournalId;
        partial void OnJournalIdChanging(Nullable<global::System.Int32> value);
        partial void OnJournalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SerializedDataSourceResponse
        {
            get
            {
                return _SerializedDataSourceResponse;
            }
            set
            {
                OnSerializedDataSourceResponseChanging(value);
                ReportPropertyChanging("SerializedDataSourceResponse");
                _SerializedDataSourceResponse = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SerializedDataSourceResponse");
                OnSerializedDataSourceResponseChanged();
            }
        }
        private global::System.String _SerializedDataSourceResponse;
        partial void OnSerializedDataSourceResponseChanging(global::System.String value);
        partial void OnSerializedDataSourceResponseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DataSourceSpecificId
        {
            get
            {
                return _DataSourceSpecificId;
            }
            set
            {
                OnDataSourceSpecificIdChanging(value);
                ReportPropertyChanging("DataSourceSpecificId");
                _DataSourceSpecificId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DataSourceSpecificId");
                OnDataSourceSpecificIdChanged();
            }
        }
        private global::System.String _DataSourceSpecificId;
        partial void OnDataSourceSpecificIdChanging(global::System.String value);
        partial void OnDataSourceSpecificIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "Source_AuthorsReference_FK1", "AuthorsReference")]
        public EntityCollection<AuthorsReference> AuthorsReferences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuthorsReference>("ATNModel.Source_AuthorsReference_FK1", "AuthorsReference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuthorsReference>("ATNModel.Source_AuthorsReference_FK1", "AuthorsReference", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "Source_CrawlQueue_FK1", "CrawlQueue")]
        public EntityCollection<CrawlQueue> CrawlQueues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CrawlQueue>("ATNModel.Source_CrawlQueue_FK1", "CrawlQueue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CrawlQueue>("ATNModel.Source_CrawlQueue_FK1", "CrawlQueue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "Source_CrawlResult_FK1", "CrawlResult")]
        public EntityCollection<CrawlResult> CrawlResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CrawlResult>("ATNModel.Source_CrawlResult_FK1", "CrawlResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CrawlResult>("ATNModel.Source_CrawlResult_FK1", "CrawlResult", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "DataSource_Source_FK1", "DataSource")]
        public DataSource DataSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataSource>("ATNModel.DataSource_Source_FK1", "DataSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataSource>("ATNModel.DataSource_Source_FK1", "DataSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DataSource> DataSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataSource>("ATNModel.DataSource_Source_FK1", "DataSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DataSource>("ATNModel.DataSource_Source_FK1", "DataSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "Source_EditorsReference_FK1", "EditorsReference")]
        public EntityCollection<EditorsReference> EditorsReferences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EditorsReference>("ATNModel.Source_EditorsReference_FK1", "EditorsReference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EditorsReference>("ATNModel.Source_EditorsReference_FK1", "EditorsReference", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "CitationsReference", "Citation")]
        public EntityCollection<Source> References
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Source>("ATNModel.CitationsReference", "Citation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Source>("ATNModel.CitationsReference", "Citation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "CitationsReference", "Reference")]
        public EntityCollection<Source> CitingSources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Source>("ATNModel.CitationsReference", "Reference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Source>("ATNModel.CitationsReference", "Reference", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "JournalName_Source_FK1", "Journal")]
        public Journal Journal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Journal>("ATNModel.JournalName_Source_FK1", "Journal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Journal>("ATNModel.JournalName_Source_FK1", "Journal").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Journal> JournalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Journal>("ATNModel.JournalName_Source_FK1", "Journal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Journal>("ATNModel.JournalName_Source_FK1", "Journal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "Source_TheoryMembership_FK1", "TheoryMembership")]
        public EntityCollection<TheoryMembership> TheoryMemberships
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TheoryMembership>("ATNModel.Source_TheoryMembership_FK1", "TheoryMembership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TheoryMembership>("ATNModel.Source_TheoryMembership_FK1", "TheoryMembership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "RelatedSources", "Source1")]
        public EntityCollection<Source> Source11
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Source>("ATNModel.RelatedSources", "Source1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Source>("ATNModel.RelatedSources", "Source1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "RelatedSources", "Source")]
        public EntityCollection<Source> Sources1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Source>("ATNModel.RelatedSources", "Source");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Source>("ATNModel.RelatedSources", "Source", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "SourceSubject", "Subject")]
        public EntityCollection<Subject> Subjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subject>("ATNModel.SourceSubject", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subject>("ATNModel.SourceSubject", "Subject", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ATNModel", Name="Subject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Subject object.
        /// </summary>
        /// <param name="subjectId">Initial value of the SubjectId property.</param>
        /// <param name="subjectText">Initial value of the SubjectText property.</param>
        /// <param name="dataSourceId">Initial value of the DataSourceId property.</param>
        /// <param name="dataSourceSpecificId">Initial value of the DataSourceSpecificId property.</param>
        public static Subject CreateSubject(global::System.Int32 subjectId, global::System.String subjectText, global::System.Int32 dataSourceId, global::System.String dataSourceSpecificId)
        {
            Subject subject = new Subject();
            subject.SubjectId = subjectId;
            subject.SubjectText = subjectText;
            subject.DataSourceId = dataSourceId;
            subject.DataSourceSpecificId = dataSourceSpecificId;
            return subject;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectId
        {
            get
            {
                return _SubjectId;
            }
            set
            {
                if (_SubjectId != value)
                {
                    OnSubjectIdChanging(value);
                    ReportPropertyChanging("SubjectId");
                    _SubjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubjectId");
                    OnSubjectIdChanged();
                }
            }
        }
        private global::System.Int32 _SubjectId;
        partial void OnSubjectIdChanging(global::System.Int32 value);
        partial void OnSubjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SubjectText
        {
            get
            {
                return _SubjectText;
            }
            set
            {
                OnSubjectTextChanging(value);
                ReportPropertyChanging("SubjectText");
                _SubjectText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SubjectText");
                OnSubjectTextChanged();
            }
        }
        private global::System.String _SubjectText;
        partial void OnSubjectTextChanging(global::System.String value);
        partial void OnSubjectTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DataSourceId
        {
            get
            {
                return _DataSourceId;
            }
            set
            {
                OnDataSourceIdChanging(value);
                ReportPropertyChanging("DataSourceId");
                _DataSourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataSourceId");
                OnDataSourceIdChanged();
            }
        }
        private global::System.Int32 _DataSourceId;
        partial void OnDataSourceIdChanging(global::System.Int32 value);
        partial void OnDataSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DataSourceSpecificId
        {
            get
            {
                return _DataSourceSpecificId;
            }
            set
            {
                OnDataSourceSpecificIdChanging(value);
                ReportPropertyChanging("DataSourceSpecificId");
                _DataSourceSpecificId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DataSourceSpecificId");
                OnDataSourceSpecificIdChanged();
            }
        }
        private global::System.String _DataSourceSpecificId;
        partial void OnDataSourceSpecificIdChanging(global::System.String value);
        partial void OnDataSourceSpecificIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "FK_Subject_DataSource", "DataSource")]
        public DataSource DataSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataSource>("ATNModel.FK_Subject_DataSource", "DataSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataSource>("ATNModel.FK_Subject_DataSource", "DataSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DataSource> DataSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataSource>("ATNModel.FK_Subject_DataSource", "DataSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DataSource>("ATNModel.FK_Subject_DataSource", "DataSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "SourceSubject", "Source")]
        public EntityCollection<Source> Sources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Source>("ATNModel.SourceSubject", "Source");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Source>("ATNModel.SourceSubject", "Source", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ATNModel", Name="Theory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Theory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Theory object.
        /// </summary>
        /// <param name="theoryId">Initial value of the TheoryId property.</param>
        /// <param name="theoryName">Initial value of the TheoryName property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        public static Theory CreateTheory(global::System.Int32 theoryId, global::System.String theoryName, global::System.DateTime dateAdded)
        {
            Theory theory = new Theory();
            theory.TheoryId = theoryId;
            theory.TheoryName = theoryName;
            theory.DateAdded = dateAdded;
            return theory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TheoryId
        {
            get
            {
                return _TheoryId;
            }
            set
            {
                if (_TheoryId != value)
                {
                    OnTheoryIdChanging(value);
                    ReportPropertyChanging("TheoryId");
                    _TheoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TheoryId");
                    OnTheoryIdChanged();
                }
            }
        }
        private global::System.Int32 _TheoryId;
        partial void OnTheoryIdChanging(global::System.Int32 value);
        partial void OnTheoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TheoryName
        {
            get
            {
                return _TheoryName;
            }
            set
            {
                OnTheoryNameChanging(value);
                ReportPropertyChanging("TheoryName");
                _TheoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TheoryName");
                OnTheoryNameChanged();
            }
        }
        private global::System.String _TheoryName;
        partial void OnTheoryNameChanging(global::System.String value);
        partial void OnTheoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TheoryComment
        {
            get
            {
                return _TheoryComment;
            }
            set
            {
                OnTheoryCommentChanging(value);
                ReportPropertyChanging("TheoryComment");
                _TheoryComment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TheoryComment");
                OnTheoryCommentChanged();
            }
        }
        private global::System.String _TheoryComment;
        partial void OnTheoryCommentChanging(global::System.String value);
        partial void OnTheoryCommentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "FK_Crawl_Theory", "Crawl")]
        public EntityCollection<Crawl> Crawl
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Crawl>("ATNModel.FK_Crawl_Theory", "Crawl");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Crawl>("ATNModel.FK_Crawl_Theory", "Crawl", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "Theory_Run_FK1", "Run")]
        public EntityCollection<Run> Runs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Run>("ATNModel.Theory_Run_FK1", "Run");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Run>("ATNModel.Theory_Run_FK1", "Run", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "Theory_TheoryMembership_FK1", "TheoryMembership")]
        public EntityCollection<TheoryMembership> TheoryMemberships
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TheoryMembership>("ATNModel.Theory_TheoryMembership_FK1", "TheoryMembership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TheoryMembership>("ATNModel.Theory_TheoryMembership_FK1", "TheoryMembership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "FK_TheoryDefinition_Theory", "TheoryDefinition")]
        public EntityCollection<TheoryDefinition> TheoryDefinitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TheoryDefinition>("ATNModel.FK_TheoryDefinition_Theory", "TheoryDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TheoryDefinition>("ATNModel.FK_TheoryDefinition_Theory", "TheoryDefinition", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ATNModel", Name="TheoryDefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TheoryDefinition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TheoryDefinition object.
        /// </summary>
        /// <param name="theoryDefinitionId">Initial value of the TheoryDefinitionId property.</param>
        /// <param name="theoryId">Initial value of the TheoryId property.</param>
        /// <param name="canonicalIds">Initial value of the CanonicalIds property.</param>
        /// <param name="dataSourceId">Initial value of the DataSourceId property.</param>
        public static TheoryDefinition CreateTheoryDefinition(global::System.Int32 theoryDefinitionId, global::System.Int32 theoryId, global::System.String canonicalIds, global::System.Int32 dataSourceId)
        {
            TheoryDefinition theoryDefinition = new TheoryDefinition();
            theoryDefinition.TheoryDefinitionId = theoryDefinitionId;
            theoryDefinition.TheoryId = theoryId;
            theoryDefinition.CanonicalIds = canonicalIds;
            theoryDefinition.DataSourceId = dataSourceId;
            return theoryDefinition;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TheoryDefinitionId
        {
            get
            {
                return _TheoryDefinitionId;
            }
            set
            {
                if (_TheoryDefinitionId != value)
                {
                    OnTheoryDefinitionIdChanging(value);
                    ReportPropertyChanging("TheoryDefinitionId");
                    _TheoryDefinitionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TheoryDefinitionId");
                    OnTheoryDefinitionIdChanged();
                }
            }
        }
        private global::System.Int32 _TheoryDefinitionId;
        partial void OnTheoryDefinitionIdChanging(global::System.Int32 value);
        partial void OnTheoryDefinitionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TheoryId
        {
            get
            {
                return _TheoryId;
            }
            set
            {
                OnTheoryIdChanging(value);
                ReportPropertyChanging("TheoryId");
                _TheoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TheoryId");
                OnTheoryIdChanged();
            }
        }
        private global::System.Int32 _TheoryId;
        partial void OnTheoryIdChanging(global::System.Int32 value);
        partial void OnTheoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CanonicalIds
        {
            get
            {
                return _CanonicalIds;
            }
            set
            {
                OnCanonicalIdsChanging(value);
                ReportPropertyChanging("CanonicalIds");
                _CanonicalIds = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CanonicalIds");
                OnCanonicalIdsChanged();
            }
        }
        private global::System.String _CanonicalIds;
        partial void OnCanonicalIdsChanging(global::System.String value);
        partial void OnCanonicalIdsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DataSourceId
        {
            get
            {
                return _DataSourceId;
            }
            set
            {
                OnDataSourceIdChanging(value);
                ReportPropertyChanging("DataSourceId");
                _DataSourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataSourceId");
                OnDataSourceIdChanged();
            }
        }
        private global::System.Int32 _DataSourceId;
        partial void OnDataSourceIdChanging(global::System.Int32 value);
        partial void OnDataSourceIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "FK_TheoryDefinition_Theory", "Theory")]
        public Theory Theory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theory>("ATNModel.FK_TheoryDefinition_Theory", "Theory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theory>("ATNModel.FK_TheoryDefinition_Theory", "Theory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Theory> TheoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theory>("ATNModel.FK_TheoryDefinition_Theory", "Theory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Theory>("ATNModel.FK_TheoryDefinition_Theory", "Theory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ATNModel", Name="TheoryMembership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TheoryMembership : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TheoryMembership object.
        /// </summary>
        /// <param name="theoryMembershipId">Initial value of the TheoryMembershipId property.</param>
        /// <param name="theoryId">Initial value of the TheoryId property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        /// <param name="runId">Initial value of the RunId property.</param>
        public static TheoryMembership CreateTheoryMembership(global::System.Int64 theoryMembershipId, global::System.Int32 theoryId, global::System.Int64 sourceId, global::System.Int32 runId)
        {
            TheoryMembership theoryMembership = new TheoryMembership();
            theoryMembership.TheoryMembershipId = theoryMembershipId;
            theoryMembership.TheoryId = theoryId;
            theoryMembership.SourceId = sourceId;
            theoryMembership.RunId = runId;
            return theoryMembership;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TheoryMembershipId
        {
            get
            {
                return _TheoryMembershipId;
            }
            set
            {
                if (_TheoryMembershipId != value)
                {
                    OnTheoryMembershipIdChanging(value);
                    ReportPropertyChanging("TheoryMembershipId");
                    _TheoryMembershipId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TheoryMembershipId");
                    OnTheoryMembershipIdChanged();
                }
            }
        }
        private global::System.Int64 _TheoryMembershipId;
        partial void OnTheoryMembershipIdChanging(global::System.Int64 value);
        partial void OnTheoryMembershipIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TheoryId
        {
            get
            {
                return _TheoryId;
            }
            set
            {
                OnTheoryIdChanging(value);
                ReportPropertyChanging("TheoryId");
                _TheoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TheoryId");
                OnTheoryIdChanged();
            }
        }
        private global::System.Int32 _TheoryId;
        partial void OnTheoryIdChanging(global::System.Int32 value);
        partial void OnTheoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Int64 _SourceId;
        partial void OnSourceIdChanging(global::System.Int64 value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RunId
        {
            get
            {
                return _RunId;
            }
            set
            {
                OnRunIdChanging(value);
                ReportPropertyChanging("RunId");
                _RunId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RunId");
                OnRunIdChanged();
            }
        }
        private global::System.Int32 _RunId;
        partial void OnRunIdChanging(global::System.Int32 value);
        partial void OnRunIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> TheoryNamePresent
        {
            get
            {
                return _TheoryNamePresent;
            }
            set
            {
                OnTheoryNamePresentChanging(value);
                ReportPropertyChanging("TheoryNamePresent");
                _TheoryNamePresent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TheoryNamePresent");
                OnTheoryNamePresentChanged();
            }
        }
        private Nullable<global::System.Boolean> _TheoryNamePresent;
        partial void OnTheoryNamePresentChanging(Nullable<global::System.Boolean> value);
        partial void OnTheoryNamePresentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PredictionProbability
        {
            get
            {
                return _PredictionProbability;
            }
            set
            {
                OnPredictionProbabilityChanging(value);
                ReportPropertyChanging("PredictionProbability");
                _PredictionProbability = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PredictionProbability");
                OnPredictionProbabilityChanged();
            }
        }
        private Nullable<global::System.Double> _PredictionProbability;
        partial void OnPredictionProbabilityChanging(Nullable<global::System.Double> value);
        partial void OnPredictionProbabilityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsContributingPrediction
        {
            get
            {
                return _IsContributingPrediction;
            }
            set
            {
                OnIsContributingPredictionChanging(value);
                ReportPropertyChanging("IsContributingPrediction");
                _IsContributingPrediction = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsContributingPrediction");
                OnIsContributingPredictionChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsContributingPrediction;
        partial void OnIsContributingPredictionChanging(Nullable<global::System.Boolean> value);
        partial void OnIsContributingPredictionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ArticleLevelEigenFactor
        {
            get
            {
                return _ArticleLevelEigenFactor;
            }
            set
            {
                OnArticleLevelEigenFactorChanging(value);
                ReportPropertyChanging("ArticleLevelEigenFactor");
                _ArticleLevelEigenFactor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArticleLevelEigenFactor");
                OnArticleLevelEigenFactorChanged();
            }
        }
        private Nullable<global::System.Double> _ArticleLevelEigenFactor;
        partial void OnArticleLevelEigenFactorChanging(Nullable<global::System.Double> value);
        partial void OnArticleLevelEigenFactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TheoryAttributionRatio
        {
            get
            {
                return _TheoryAttributionRatio;
            }
            set
            {
                OnTheoryAttributionRatioChanging(value);
                ReportPropertyChanging("TheoryAttributionRatio");
                _TheoryAttributionRatio = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TheoryAttributionRatio");
                OnTheoryAttributionRatioChanged();
            }
        }
        private Nullable<global::System.Double> _TheoryAttributionRatio;
        partial void OnTheoryAttributionRatioChanging(Nullable<global::System.Double> value);
        partial void OnTheoryAttributionRatioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ImpactFactor
        {
            get
            {
                return _ImpactFactor;
            }
            set
            {
                OnImpactFactorChanging(value);
                ReportPropertyChanging("ImpactFactor");
                _ImpactFactor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImpactFactor");
                OnImpactFactorChanged();
            }
        }
        private Nullable<global::System.Int32> _ImpactFactor;
        partial void OnImpactFactorChanging(Nullable<global::System.Int32> value);
        partial void OnImpactFactorChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "FK_TheoryMembership_Run", "Run")]
        public Run Run
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Run>("ATNModel.FK_TheoryMembership_Run", "Run").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Run>("ATNModel.FK_TheoryMembership_Run", "Run").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Run> RunReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Run>("ATNModel.FK_TheoryMembership_Run", "Run");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Run>("ATNModel.FK_TheoryMembership_Run", "Run", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "Source_TheoryMembership_FK1", "Source")]
        public Source Source
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("ATNModel.Source_TheoryMembership_FK1", "Source").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("ATNModel.Source_TheoryMembership_FK1", "Source").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Source> SourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("ATNModel.Source_TheoryMembership_FK1", "Source");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Source>("ATNModel.Source_TheoryMembership_FK1", "Source", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ATNModel", "Theory_TheoryMembership_FK1", "Theory")]
        public Theory Theory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theory>("ATNModel.Theory_TheoryMembership_FK1", "Theory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theory>("ATNModel.Theory_TheoryMembership_FK1", "Theory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Theory> TheoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theory>("ATNModel.Theory_TheoryMembership_FK1", "Theory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Theory>("ATNModel.Theory_TheoryMembership_FK1", "Theory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ATNModel", Name="TheoryMembershipSignificance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TheoryMembershipSignificance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TheoryMembershipSignificance object.
        /// </summary>
        /// <param name="theoryMembershipSignificanceId">Initial value of the TheoryMembershipSignificanceId property.</param>
        /// <param name="theoryId">Initial value of the TheoryId property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        /// <param name="rAEvaluatedContribution">Initial value of the RAEvaluatedContribution property.</param>
        /// <param name="isMetaAnalysis">Initial value of the IsMetaAnalysis property.</param>
        public static TheoryMembershipSignificance CreateTheoryMembershipSignificance(global::System.Int64 theoryMembershipSignificanceId, global::System.Int32 theoryId, global::System.Int64 sourceId, global::System.Boolean rAEvaluatedContribution, global::System.Boolean isMetaAnalysis)
        {
            TheoryMembershipSignificance theoryMembershipSignificance = new TheoryMembershipSignificance();
            theoryMembershipSignificance.TheoryMembershipSignificanceId = theoryMembershipSignificanceId;
            theoryMembershipSignificance.TheoryId = theoryId;
            theoryMembershipSignificance.SourceId = sourceId;
            theoryMembershipSignificance.RAEvaluatedContribution = rAEvaluatedContribution;
            theoryMembershipSignificance.IsMetaAnalysis = isMetaAnalysis;
            return theoryMembershipSignificance;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TheoryMembershipSignificanceId
        {
            get
            {
                return _TheoryMembershipSignificanceId;
            }
            set
            {
                if (_TheoryMembershipSignificanceId != value)
                {
                    OnTheoryMembershipSignificanceIdChanging(value);
                    ReportPropertyChanging("TheoryMembershipSignificanceId");
                    _TheoryMembershipSignificanceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TheoryMembershipSignificanceId");
                    OnTheoryMembershipSignificanceIdChanged();
                }
            }
        }
        private global::System.Int64 _TheoryMembershipSignificanceId;
        partial void OnTheoryMembershipSignificanceIdChanging(global::System.Int64 value);
        partial void OnTheoryMembershipSignificanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TheoryId
        {
            get
            {
                return _TheoryId;
            }
            set
            {
                OnTheoryIdChanging(value);
                ReportPropertyChanging("TheoryId");
                _TheoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TheoryId");
                OnTheoryIdChanged();
            }
        }
        private global::System.Int32 _TheoryId;
        partial void OnTheoryIdChanging(global::System.Int32 value);
        partial void OnTheoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Int64 _SourceId;
        partial void OnSourceIdChanging(global::System.Int64 value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> RAMarkedContributing
        {
            get
            {
                return _RAMarkedContributing;
            }
            set
            {
                OnRAMarkedContributingChanging(value);
                ReportPropertyChanging("RAMarkedContributing");
                _RAMarkedContributing = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RAMarkedContributing");
                OnRAMarkedContributingChanged();
            }
        }
        private Nullable<global::System.Boolean> _RAMarkedContributing;
        partial void OnRAMarkedContributingChanging(Nullable<global::System.Boolean> value);
        partial void OnRAMarkedContributingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RAEvaluatedContribution
        {
            get
            {
                return _RAEvaluatedContribution;
            }
            set
            {
                OnRAEvaluatedContributionChanging(value);
                ReportPropertyChanging("RAEvaluatedContribution");
                _RAEvaluatedContribution = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RAEvaluatedContribution");
                OnRAEvaluatedContributionChanged();
            }
        }
        private global::System.Boolean _RAEvaluatedContribution;
        partial void OnRAEvaluatedContributionChanging(global::System.Boolean value);
        partial void OnRAEvaluatedContributionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMetaAnalysis
        {
            get
            {
                return _IsMetaAnalysis;
            }
            set
            {
                OnIsMetaAnalysisChanging(value);
                ReportPropertyChanging("IsMetaAnalysis");
                _IsMetaAnalysis = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMetaAnalysis");
                OnIsMetaAnalysisChanged();
            }
        }
        private global::System.Boolean _IsMetaAnalysis;
        partial void OnIsMetaAnalysisChanging(global::System.Boolean value);
        partial void OnIsMetaAnalysisChanged();

        #endregion

    
    }

    #endregion

    
}
